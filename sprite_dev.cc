#include "sprite_dev.h"

const int SQUARE_SIDE = 32;
const int diff_EZ = 8; // 8 by 8 blocks

// Prints Sprite into the Screen
void DrawSprite(int *image_buffer_pointer, Sprite sprite) {
    // Draw a sprite at its position
    for (int y = 0; y < SQUARE_SIDE; ++y) {
        for (int x = 0; x < SQUARE_SIDE; ++x) {
            int pixel_color = sprite.color[y*SQUARE_SIDE+x]; // Get sprite color
            // Draw sprite pixel at its position
            *((int *)(image_buffer_pointer + (sprite.y + y) * WIDTH + (sprite.x + x))) = pixel_color;
        }
    }
}

unsigned int WHITE_1[]   = {0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9, 0xFEFEFE, 0xFDFDFD, 0xF6F6F6, 0xF5F5F5, 0xFBFBFB, 0xFFFFFF, 0xFEFEFE, 0xF8F8F8, 0xF7F7F7, 0xFBFBFB, 0xFFFFFF, 0xFDFDFD,
							0xF5F5F5, 0xF4F4F4, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFDFDFD,
							0xFEFEFE, 0xFBFBFB, 0xFBFBFB, 0xFDFDFD, 0xF8F8F8, 0xF1F1F1, 0xFFFFFF, 0xF7F7F7, 0xF2F2F2, 0xF6F6F6, 0xFCFCFC, 0xFDFDFD, 0xFAFAFA, 0xF7F7F7, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFEFEFE, 0xFBFBFB, 0xF8F8F8, 0xFAFAFA, 0xFDFDFD, 0xFBFBFB, 0xF5F5F5, 0xF8F8F8, 0xFBFBFB, 0xFDFDFD, 0xFAFAFA,
							0xFAFAFA, 0xFCFCFC, 0xFEFEFE, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF0F0F0,
							0xF2F2F2, 0xF4F4F4, 0xF7F7F7, 0xFAFAFA, 0xFDFDFD, 0xFEFEFE, 0xFEFEFE, 0xF6F6F6, 0xFCFCFC, 0xFEFEFE, 0xF9F9F9, 0xF6F6F6, 0xF8F8F8, 0xF6F6F6, 0xF1F1F1, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFDFDFD, 0xF7F7F7, 0xF5F5F5, 0xF6F6F6, 0xFAFAFA, 0xF7F7F7, 0xF4F4F4,
							0xF6F6F6, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xF5F5F5, 0xF1F1F1, 0xEFEFEF, 0xEFEFEF, 0xF0F0F0, 0xF3F3F3, 0xFCFCFC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFEFEFE, 0xF1F1F1, 0xE8E8E8, 0xECECEC, 0xF6F6F6, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFCFCFC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xF4F4F4, 0xEDEDED, 0xDDDDDD, 0xE1E1E1, 0xF1F1F1, 0xFFFFFF, 0xFFFFFF, 0xF8F8F8, 0xF8F8F8, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF7F7F7, 0xF6F6F6, 0xFCFCFC, 0xFAFAFA, 0xD8D8D8, 0x8E8E8E, 0x3A3A3A, 0x030303, 0x070707, 0x010101, 0x292929, 0x878787, 0xE0E0E0, 0xFFFFFF, 0xFEFEFE, 0xF4F4F4, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFCFCFC, 0xECECEC, 0xFEFEFE, 0xA3A3A3, 0x222222, 0x000000, 0x050505, 0x323232, 0x484848, 0x444444, 0x080808, 0x000000, 0x494949, 0xDCDCDC, 0xFBFBFB, 0xFDFDFD, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF6F6F6, 0xFFFFFF, 0xF7F7F7, 0x5B5B5B, 0x0F0F0F, 0x7E7E7E, 0xDDDDDD, 0xFBFBFB, 0xFFFFFF, 0xF6F6F6, 0xC7C7C7, 0x363636, 0x000000, 0x6C6C6C, 0xFFFFFF, 0xECECEC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF6F6F6, 0xF1F1F1, 0xFFFFFF, 0xF1F1F1, 0xD9D9D9, 0xF4F4F4, 0xFBFBFB, 0xFEFEFE, 0xFFFFFF, 0xEDEDED, 0xFFFFFF, 0xB2B2B2, 0x050505, 0x171717, 0xF3F3F3, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xF1F1F1, 0xF9F9F9, 0xF8F8F8, 0xF7F7F7, 0xFFFFFF, 0xF7F7F7, 0xF4F4F4, 0xEBEBEB, 0xFBFBFB, 0xFFFFFF, 0xDEDEDE, 0x080808, 0x080808, 0xD8D8D8, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xEEEEEE, 0xF2F2F2, 0xFFFFFF, 0xF7F7F7, 0xEFEFEF, 0xF9F9F9, 0xFBFBFB, 0xFDFDFD, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xD8D8D8, 0x010101, 0x080808, 0xD9D9D9, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xF8F8F8, 0xFBFBFB, 0xFFFFFF, 0xFFFFFF, 0xF1F1F1, 0xF1F1F1, 0xFFFFFF, 0xF4F4F4, 0xDCDCDC, 0xFFFFFF, 0xB4B4B4, 0x0D0D0D, 0x2C2C2C, 0xF5F5F5, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF2F2F2, 0xFCFCFC, 0xF2F2F2, 0xECECEC, 0xF9F9F9, 0xFFFFFF, 0xFCFCFC, 0xEDEDED, 0xFBFBFB, 0xFFFFFF, 0xFFFFFF, 0x4A4A4A, 0x000000, 0x919191, 0xFFFFFF, 0xDEDEDE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF7F7F7, 0xFFFFFF, 0xFDFDFD, 0xFAFAFA, 0xFDFDFD, 0xF8F8F8, 0xFCFCFC, 0xFFFFFF, 0xF6F6F6, 0xFAFAFA, 0xA5A5A5, 0x060606, 0x202020, 0xE8E8E8, 0xFFFFFF, 0xFDFDFD, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xFCFCFC, 0xEEEEEE, 0xFFFFFF, 0xFFFFFF, 0xF0F0F0, 0xFDFDFD, 0xF0F0F0, 0xF8F8F8, 0xCFCFCF, 0x1A1A1A, 0x030303, 0xB3B3B3, 0xFFFFFF, 0xF3F3F3, 0xF5F5F5, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFDFDFD, 0xE2E2E2, 0xFFFFFF, 0xF1F1F1, 0xEDEDED, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xD9D9D9, 0x1B1B1B, 0x000000, 0x959595, 0xFAFAFA, 0xFFFFFF, 0xF9F9F9, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFDFDFD, 0xFEFEFE, 0xF5F5F5, 0xFEFEFE, 0xF0F0F0, 0xEEEEEE, 0xD7D7D7, 0x2A2A2A, 0x000000, 0x858585, 0xFFFFFF, 0xF4F4F4, 0xECECEC, 0xF6F6F6, 0xFDFDFD, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xEFEFEF, 0xFFFFFF, 0xFAFAFA, 0xFFFFFF, 0xF5F5F5, 0xFFFFFF, 0xDFDFDF, 0x2C2C2C, 0x000000, 0x8F8F8F, 0xFDFDFD, 0xF2F2F2, 0xF2F2F2, 0xFFFFFF, 0xF6F6F6, 0xF2F2F2, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9, 0xEAEAEA, 0xF7F7F7, 0xFFFFFF, 0xDCDCDC, 0x2C2C2C, 0x000000, 0x888888, 0xF3F3F3, 0xFCFCFC, 0xEDEDED, 0xFFFFFF, 0xFEFEFE, 0xF5F5F5, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFFFFFF, 0xEEEEEE, 0xFFFFFF, 0xC7C7C7, 0x2C2C2C, 0x000000, 0x9D9D9D, 0xF6F6F6, 0xF6F6F6, 0xF2F2F2, 0xFFFFFF, 0xF3F3F3, 0xE0E0E0, 0xFDFDFD, 0xEEEEEE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF1F1F1, 0xF7F7F7, 0xFFFFFF, 0xDEDEDE, 0x2D2D2D, 0x020202, 0xAAAAAA, 0xEFEFEF, 0xFFFFFF, 0xF9F9F9, 0xFAFAFA, 0xFFFFFF, 0xF9F9F9, 0xFFFFFF, 0xFFFFFF, 0xF9F9F9, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xFCFCFC, 0xE0E0E0, 0x2B2B2B, 0x000000, 0x3D3D3D, 0x919191, 0x8F8F8F, 0x838383, 0x929292, 0x929292, 0x838383, 0x989898, 0x8F8F8F, 0x949494, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFDFDFD, 0xFFFFFF, 0xC3C3C3, 0x050505, 0x070707, 0x000000, 0x030303, 0x000000, 0x000000, 0x000000, 0x0F0F0F, 0x000000, 0x070707, 0x000000, 0x161616, 0xF8F8F8, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF0F0F0, 0xF7F7F7, 0xE3E3E3, 0x767676, 0x898989, 0x858585, 0x888888, 0x898989, 0x868686, 0x828282, 0x919191, 0x7B7B7B, 0x848484, 0x8C8C8C, 0x929292, 0xF9F9F9, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xF2F2F2, 0xFFFFFF, 0xFFFFFF, 0xFEFEFE, 0xFFFFFF, 0xFFFFFF, 0xFAFAFA, 0xFFFFFF, 0xFCFCFC, 0xFBFBFB, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF5F5F5, 0xECECEC, 0xF4F4F4, 0xFCFCFC, 0xFBFBFB, 0xF7F7F7, 0xF4F4F4, 0xF6F6F6, 0xFAFAFA, 0xF2F2F2, 0xF3F3F3, 0xFDFDFD, 0xF7F7F7, 0xF3F3F3, 0xF7F7F7, 0xEDEDED, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFAFAFA, 0xF8F8F8, 0xFFFFFF, 0xF9F9F9, 0xFCFCFC, 0xFFFFFF, 0xF8F8F8, 0xF7F7F7, 0xFFFFFF, 0xF6F6F6, 0xFDFDFD, 0xFFFFFF, 0xF1F1F1, 0xF9F9F9, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9, 0xFBFBFB, 0xF5F5F5, 0xFCFCFC, 0xF6F6F6, 0xF8F8F8, 0xFFFFFF, 0xF4F4F4, 0xF0F0F0, 0xFFFFFF, 0xF9F9F9, 0xEFEFEF, 0xFFFFFF, 0xFCFCFC, 0xF5F5F5, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF7F7F7, 0xFFFFFF, 0xF8F8F8, 0xFAFAFA, 0xFFFFFF, 0xF3F3F3, 0xFFFFFF, 0xF7F7F7, 0xF5F5F5, 0xFFFFFF, 0xFFFFFF, 0xF2F2F2, 0xFDFDFD, 0xFFFFFF, 0xF4F4F4, 0xF5F5F5, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF8F8F8, 0xFFFFFF, 0xF7F7F7, 0xF7F7F7, 0xFFFFFF, 0xEDEDED, 0xFFFFFF, 0xFFFFFF, 0xFDFDFD, 0xF0F0F0, 0xFFFFFF, 0xFFFFFF, 0xF8F8F8, 0xFAFAFA, 0xF5F5F5, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA};
// Create white square boxes for easy difficulty
void generate_clear_blocks_ez(int *image_buffer_pointer) {
	for (int j = 0; j < diff_EZ; ++j) {
		for (int i = 1; i <= diff_EZ; ++i) {
			Sprite sprite = { i*(WIDTH / 32) - (SQUARE_SIDE / 2) + ((WIDTH - 360) / 2),
								j*(HEIGHT / 24) - (SQUARE_SIDE / 2) + ((HEIGHT - 292) / 2),
								&WHITE_1[0]  // WHITE COLOR
							};

			DrawSprite(image_buffer_pointer, sprite);
		}
	}
	return;
}


unsigned int oneDigitBlock[] =  {0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9, 0xFDFDFD, 0xF5F5F5, 0xF7F7F7, 0xFFFFFF,
							0xFCFCFC, 0xF4F4F4, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF8F8F8, 0xFBFBFB, 0xFEFEFE, 0xFBFBFB, 0xF7F7F7, 0xFDFDFD, 0xFDFDFD, 0xF2F2F2, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xF2F2F2, 0xF9F9F9, 0xFBFBFB,
							0xEEEEEE, 0xF6F6F6, 0xFFFFFF, 0xFBFBFB, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFAFAFA, 0xFCFCFC, 0xFFFFFF, 0xFFFFFF, 0xF2F2F2, 0xF5F5F5, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xE7E7E7, 0xF4F4F4, 0xF2F2F2,
							0xF6F6F6, 0xFFFFFF, 0xFAFAFA, 0xEFEFEF, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xFFFFFF, 0xFDFDFD, 0xECECEC, 0xF7F7F7, 0xFFFFFF, 0xFBFBFB, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xE7E7E7,
							0xF2F2F2, 0xFFFFFF, 0xF8F8F8, 0xFAFAFA, 0xFFFFFF, 0xF2F2F2, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0x6B6B6B, 0x3A3A3A, 0x8D8D8D, 0xFEFEFE, 0xFDFDFD, 0xF4F4F4, 0xFFFFFF, 0xF4F4F4, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFFFFFF, 0xF2F2F2, 0xFBFBFB, 0xFBFBFB, 0xFFFFFF, 0xCCCCCC, 0x3D3D3D, 0x030303,
							0x000000, 0x757575, 0xFEFEFE, 0xFFFFFF, 0xEEEEEE, 0xFFFFFF, 0xF6F6F6, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xE5E5E5, 0xFFFFFF, 0xF3F3F3, 0xFFFFFF, 0xB9B9B9, 0x060606, 0x121212, 0x474747, 0x060606, 0x737373, 0xFCFCFC, 0xFDFDFD, 0xF1F1F1, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9, 0xF4F4F4, 0xFFFFFF, 0xF2F2F2, 0x727272, 0x000000, 0x191919, 0x9E9E9E,
							0x878787, 0x070707, 0x737373, 0xFDFDFD, 0xFCFCFC, 0xF9F9F9, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xF0F0F0, 0xFFFFFF, 0x666666, 0x161616, 0xC9C9C9, 0xFFFFFF, 0x959595, 0x000000, 0x787878, 0xFFFFFF, 0xF8F8F8, 0xFFFFFF, 0xF7F7F7, 0xF3F3F3, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF4F4F4, 0xF6F6F6, 0xFFFFFF, 0xE5E5E5, 0xDCDCDC, 0xFEFEFE,
							0xFEFEFE, 0x888888, 0x000000, 0x818181, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xFAFAFA, 0xF3F3F3, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFCFCFC, 0xFAFAFA, 0xFFFFFF, 0xF6F6F6, 0xFFFFFF, 0xFFFFFF, 0xF0F0F0, 0xFFFFFF, 0x838383, 0x000000, 0x848484, 0xFEFEFE, 0xE8E8E8, 0xFCFCFC, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xF3F3F3, 0xF3F3F3, 0xFCFCFC, 0xF9F9F9, 0xF7F7F7,
							0xFAFAFA, 0xF0F0F0, 0x848484, 0x010101, 0x7C7C7C, 0xFEFEFE, 0xEFEFEF, 0xF7F7F7, 0xFDFDFD, 0xFDFDFD, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFDFDFD, 0xF5F5F5, 0xFFFFFF, 0xF9F9F9, 0xF7F7F7, 0xFEFEFE, 0xF6F6F6, 0xFFFFFF, 0x838383, 0x000000, 0x717171, 0xFFFFFF, 0xFCFCFC, 0xF7F7F7, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA,
							0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7,
							0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB,
							0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC,
							0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA,
							0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7,
							0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9,
							0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD,
							0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0x797979, 0x000000, 0x6B6B6B, 0xFDFDFD, 0xFDFDFD, 0xF6F6F6, 0xFBFBFB, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xCCCCCC, 0x888888, 0xC3C3C3,
							0xFCFCFC, 0xF7F7F7, 0xFFFFFF, 0xF7F7F7, 0xF6F6F6, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xF0F0F0, 0xFFFFFF, 0xF6F6F6, 0xF4F4F4, 0xFFFFFF, 0xF3F3F3, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9,
							0xFFFFFF, 0xF7F7F7, 0xF8F8F8, 0xFDFDFD, 0xF1F1F1, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF7F7F7, 0xF0F0F0, 0xFEFEFE, 0xFFFFFF, 0xF7F7F7, 0xF9F9F9, 0xF7F7F7, 0xF8F8F8, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xF7F7F7, 0xFFFFFF, 0xFBFBFB, 0xEFEFEF, 0xFCFCFC, 0xFFFFFF, 0xF0F0F0, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF7F7F7, 0xFEFEFE, 0xF9F9F9, 0xF5F5F5, 0xF5F5F5, 0xF9F9F9, 0xFFFFFF, 0xF9F9F9, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xF9F9F9, 0xFFFFFF, 0xF3F3F3, 0xF8F8F8, 0xFFFFFF, 0xF1F1F1, 0xEDEDED, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA};

//Create all blocks with digit 1
void generate_one_blocks_ez(int *image_buffer_pointer) {
	for (int j = 0; j < diff_EZ; ++j) {
		for (int i = 1; i <= diff_EZ; ++i) {
			Sprite sprite = { i*(WIDTH / 32) - (SQUARE_SIDE / 2) + ((WIDTH - 360) / 2),
							j*(HEIGHT / 24) - (SQUARE_SIDE / 2) + ((HEIGHT - 292) / 2),
							&oneDigitBlock[0]
							};
			DrawSprite(image_buffer_pointer, sprite);
		}
	}

	return;
}

/* for 8 by 8 configuration- HARD
 * 				8			+	(32*8)+(5*(8-1)) = 256+35 =  291	+			8
 * 		space on the left		blocks with 5 pixel spacing			space on the right
 */

/* for 24 by 24 configuration- HARD
 * 				8			+	(32*24)+(5*24) = 786+115 = 	906		+			8
 * 		space on the left		blocks with 5 pixel spacing			space on the right
 */
