#include "sprite_dev.h"

const int SQUARE_SIDE = 32;
const int diff_EZ = 8; // 8 by 8 blocks

// Prints Sprite into the Screen
void DrawSprite(int *image_buffer_pointer, Sprite sprite) {
    // Draw a sprite at its position
    for (int y = 0; y < SQUARE_SIDE; ++y) {
        for (int x = 0; x < SQUARE_SIDE; ++x) {
            int pixel_color = sprite.color; // Get sprite color
            // Draw sprite pixel at its position
            *((int *)(image_buffer_pointer + (sprite.y + y) * WIDTH + (sprite.x + x))) = pixel_color;
        }
    }
}

// Create white square boxes for easy difficulty
void generate_clear_blocks_ez(int *image_buffer_pointer) {
	for (int j = 0; j < diff_EZ; ++j) {
		for (int i = 1; i <= diff_EZ; ++i) {
			Sprite sprite = { i*(WIDTH / 32) - (SQUARE_SIDE / 2) + ((WIDTH - 360) / 2),
								j*(HEIGHT / 24) - (SQUARE_SIDE / 2) + ((HEIGHT - 292) / 2),
								0xFFFFFF  // WHITE COLOR
							};

			DrawSprite(image_buffer_pointer, sprite);
		}
	}
	return;
}


unsigned int oneBlock[] =  {0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9, 0xFDFDFD, 0xF5F5F5, 0xF7F7F7, 0xFFFFFF,
							0xFCFCFC, 0xF4F4F4, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF8F8F8, 0xFBFBFB, 0xFEFEFE, 0xFBFBFB, 0xF7F7F7, 0xFDFDFD, 0xFDFDFD, 0xF2F2F2, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xF2F2F2, 0xF9F9F9, 0xFBFBFB,
							0xEEEEEE, 0xF6F6F6, 0xFFFFFF, 0xFBFBFB, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFAFAFA, 0xFCFCFC, 0xFFFFFF, 0xFFFFFF, 0xF2F2F2, 0xF5F5F5, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xE7E7E7, 0xF4F4F4, 0xF2F2F2,
							0xF6F6F6, 0xFFFFFF, 0xFAFAFA, 0xEFEFEF, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xFFFFFF, 0xFDFDFD, 0xECECEC, 0xF7F7F7, 0xFFFFFF, 0xFBFBFB, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xE7E7E7,
							0xF2F2F2, 0xFFFFFF, 0xF8F8F8, 0xFAFAFA, 0xFFFFFF, 0xF2F2F2, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0x6B6B6B, 0x3A3A3A, 0x8D8D8D, 0xFEFEFE, 0xFDFDFD, 0xF4F4F4, 0xFFFFFF, 0xF4F4F4, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFFFFFF, 0xFFFFFF, 0xF2F2F2, 0xFBFBFB, 0xFBFBFB, 0xFFFFFF, 0xCCCCCC, 0x3D3D3D, 0x030303,
							0x000000, 0x757575, 0xFEFEFE, 0xFFFFFF, 0xEEEEEE, 0xFFFFFF, 0xF6F6F6, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xE5E5E5, 0xFFFFFF, 0xF3F3F3, 0xFFFFFF, 0xB9B9B9, 0x060606, 0x121212, 0x474747, 0x060606, 0x737373, 0xFCFCFC, 0xFDFDFD, 0xF1F1F1, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9, 0xF4F4F4, 0xFFFFFF, 0xF2F2F2, 0x727272, 0x000000, 0x191919, 0x9E9E9E,
							0x878787, 0x070707, 0x737373, 0xFDFDFD, 0xFCFCFC, 0xF9F9F9, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xF0F0F0, 0xFFFFFF, 0x666666, 0x161616, 0xC9C9C9, 0xFFFFFF, 0x959595, 0x000000, 0x787878, 0xFFFFFF, 0xF8F8F8, 0xFFFFFF, 0xF7F7F7, 0xF3F3F3, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF4F4F4, 0xF6F6F6, 0xFFFFFF, 0xE5E5E5, 0xDCDCDC, 0xFEFEFE,
							0xFEFEFE, 0x888888, 0x000000, 0x818181, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xFAFAFA, 0xF3F3F3, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFCFCFC, 0xFAFAFA, 0xFFFFFF, 0xF6F6F6, 0xFFFFFF, 0xFFFFFF, 0xF0F0F0, 0xFFFFFF, 0x838383, 0x000000, 0x848484, 0xFEFEFE, 0xE8E8E8, 0xFCFCFC, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xF3F3F3, 0xF3F3F3, 0xFCFCFC, 0xF9F9F9, 0xF7F7F7,
							0xFAFAFA, 0xF0F0F0, 0x848484, 0x010101, 0x7C7C7C, 0xFEFEFE, 0xEFEFEF, 0xF7F7F7, 0xFDFDFD, 0xFDFDFD, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFDFDFD, 0xF5F5F5, 0xFFFFFF, 0xF9F9F9, 0xF7F7F7, 0xFEFEFE, 0xF6F6F6, 0xFFFFFF, 0x838383, 0x000000, 0x717171, 0xFFFFFF, 0xFCFCFC, 0xF7F7F7, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA,
							0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7,
							0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB,
							0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC,
							0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA,
							0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7,
							0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9,
							0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD, 0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFBFBFB, 0xF9F9F9, 0xFAFAFA, 0xFBFBFB, 0xFAFAFA, 0xF7F7F7, 0xF9F9F9, 0xFDFDFD, 0x848484, 0x000000, 0x7A7A7A, 0xFDFDFD,
							0xF7F7F7, 0xFCFCFC, 0xF7F7F7, 0xFCFCFC, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0x797979, 0x000000, 0x6B6B6B, 0xFDFDFD, 0xFDFDFD, 0xF6F6F6, 0xFBFBFB, 0xFEFEFE, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xCCCCCC, 0x888888, 0xC3C3C3,
							0xFCFCFC, 0xF7F7F7, 0xFFFFFF, 0xF7F7F7, 0xF6F6F6, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFEFEFE, 0xF0F0F0, 0xFFFFFF, 0xF6F6F6, 0xF4F4F4, 0xFFFFFF, 0xF3F3F3, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF9F9F9,
							0xFFFFFF, 0xF7F7F7, 0xF8F8F8, 0xFDFDFD, 0xF1F1F1, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF7F7F7, 0xF0F0F0, 0xFEFEFE, 0xFFFFFF, 0xF7F7F7, 0xF9F9F9, 0xF7F7F7, 0xF8F8F8, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xF7F7F7, 0xFFFFFF, 0xFBFBFB, 0xEFEFEF, 0xFCFCFC, 0xFFFFFF, 0xF0F0F0, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xF7F7F7, 0xFEFEFE, 0xF9F9F9, 0xF5F5F5, 0xF5F5F5, 0xF9F9F9, 0xFFFFFF, 0xF9F9F9, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA,
							0xF9F9F9, 0xFFFFFF, 0xF3F3F3, 0xF8F8F8, 0xFFFFFF, 0xF1F1F1, 0xEDEDED, 0xFFFFFF, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA, 0xFAFAFA};

//Create all blocks with digit 1
void generate_one_blocks_ez(int *image_buffer_pointer) {
	int ii = 0;
	for (int j = 0; j < diff_EZ; ++j) {
		for (int i = 1; i <= diff_EZ; ++i) {
			Sprite sprite = { i*(WIDTH / 32) - (SQUARE_SIDE / 2) + ((WIDTH - 360) / 2),
							j*(HEIGHT / 24) - (SQUARE_SIDE / 2) + ((HEIGHT - 292) / 2),
							oneBlock[ii]
							};
			DrawSprite(image_buffer_pointer, sprite);
			ii++;
		}
	}

	return;
}

/* for 8 by 8 configuration- HARD
 * 				8			+	(32*8)+(5*(8-1)) = 256+35 =  291	+			8
 * 		space on the left		blocks with 5 pixel spacing			space on the right
 */

/* for 24 by 24 configuration- HARD
 * 				8			+	(32*24)+(5*24) = 786+115 = 	906		+			8
 * 		space on the left		blocks with 5 pixel spacing			space on the right
 */
